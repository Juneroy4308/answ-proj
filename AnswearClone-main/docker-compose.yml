version: '3.8'

services:
  nginx:
    container_name: nginx-dev-container
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/dev/conf.d:/etc/nginx/conf.d:ro
      - ./volumes/api/images:/app/images
    depends_on:
      - frontend
      - backend

  frontend:
    container_name: frontend-dev-container
    build: 
      context: ./answear-client
      dockerfile: Dockerfile.dev
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost/api
    command: npm run dev -- --host 0.0.0.0
    volumes:
      - ./answear-client:/app
      - /app/node_modules

  backend:
    container_name: api-dev-container
    build:
      context: ./AnswearServer
      dockerfile: Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__Npgsql=Host=postgresql;Port=5432;Database=Answear;Username=postgres;Password=devDb1234
    volumes:
      - ./volumes/api/images:/app/Images
    depends_on:
      - postgresql

  postgresql:
    container_name: postgresql-dev-container
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=Answear
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=devDb1234
    volumes:
      - ./volumes/db:/var/lib/postgresql/data

networks:
  default:
    name: answear-network